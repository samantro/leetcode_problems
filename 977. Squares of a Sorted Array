class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {
        int i=0,j=nums.size()-1;
        vector<int> nums1(j+1);
        int k=j;
        while(i<j){
            if(abs(nums[i]) < abs(nums[j])){
                   nums1[k]=nums[j] * nums[j];
                j--;
            }
            else{
                nums1[k]= nums[i]*nums[i];
                i++;
            }
                  k--;
        }
        if(i==j){
        nums1[k]=nums[i]*nums[i];
        }
                   return nums1;
    }
};




////////////////////////////////////////////



class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {
        int p=-1;
        for(int i=0;i<nums.size();i++){
            if(nums[i]<0) p++;
            nums[i]*=nums[i];
        }
        int i=p+1,j=0;
        vector<int> res(nums.size());
        while(p>=0 && i<nums.size()){
            if(nums[p]<=nums[i]) res[j++]=nums[p--];
            else res[j++]=nums[i++];
        }
        while(p>=0) res[j++]=nums[p--];
        while(i<nums.size()) res[j++]=nums[i++];
        return res;
    }
};
